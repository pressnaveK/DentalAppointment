apiVersion: apps/v1
kind: Deployment
metadata:
  name: bot-service
  namespace: chat-appointment
  labels:
    app: bot-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bot-service
  template:
    metadata:
      labels:
        app: bot-service
    spec:
      containers:
      - name: bot-service
        image: localhost:5000/chat-appointment/bot-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: ENV
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ENV
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REDIS_URL
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: OPENAI_API_KEY
        - name: LANGCHAIN_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: LANGCHAIN_API_KEY
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: bot-service
  namespace: chat-appointment
  labels:
    app: bot-service
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  selector:
    app: bot-service