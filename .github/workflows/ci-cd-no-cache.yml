# Alternative CI/CD Pipeline - No Cache Version
# Use this if cache continues to cause issues

name: CI/CD Pipeline (No Cache)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build all services'
        required: false
        default: 'false'
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      bot-service: ${{ steps.changes.outputs.bot-service }}
      user-service: ${{ steps.changes.outputs.user-service }}
      admin-ui: ${{ steps.changes.outputs.admin-ui }}
      client-ui: ${{ steps.changes.outputs.client-ui }}
      bazel-config: ${{ steps.changes.outputs.bazel-config }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            bot-service:
              - 'api/bot_service/**'
            user-service:
              - 'api/user_service/**'
            admin-ui:
              - 'ui/admin_ui/**'
            client-ui:
              - 'ui/client_ui/**'
            bazel-config:
              - 'WORKSPACE'
              - '.bazelrc'
              - '**/BUILD'
              - 'platforms/**'

  setup-bazel:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.bazel-config == 'true' || needs.detect-changes.outputs.bot-service == 'true' || needs.detect-changes.outputs.user-service == 'true' || needs.detect-changes.outputs.admin-ui == 'true' || needs.detect-changes.outputs.client-ui == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bazel cache directory
        run: |
          mkdir -p ~/.cache/bazel
          chmod 755 ~/.cache/bazel
      
      - name: Install Bazel
        uses: bazelbuild/setup-bazelisk@v2
      
      - name: Build changed targets
        run: |
          # Make script executable if it exists
          if [ -f ./scripts/selective-build.sh ]; then
            chmod +x ./scripts/selective-build.sh
            ./scripts/selective-build.sh build
          else
            echo "Selective build script not found, skipping Bazel build"
          fi

  lint-and-test:
    runs-on: ubuntu-latest
    needs: [detect-changes, setup-bazel]
    if: needs.detect-changes.outputs.bot-service == 'true' || needs.detect-changes.outputs.user-service == 'true' || needs.detect-changes.outputs.admin-ui == 'true' || needs.detect-changes.outputs.client-ui == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bazel cache directory
        run: |
          mkdir -p ~/.cache/bazel
          chmod 755 ~/.cache/bazel
      
      - name: Install Bazel
        uses: bazelbuild/setup-bazelisk@v2
      
      - name: Run linting
        run: |
          if [ -f ./scripts/selective-build.sh ]; then
            chmod +x ./scripts/selective-build.sh
            ./scripts/selective-build.sh lint
          else
            echo "Selective build script not found, skipping lint"
          fi
      
      - name: Run tests
        run: |
          if [ -f ./scripts/selective-build.sh ]; then
            chmod +x ./scripts/selective-build.sh
            ./scripts/selective-build.sh test
          else
            echo "Selective build script not found, skipping tests"
          fi

  # Rest of the workflow would continue with build jobs...
  # (This is just showing the cache fix for Bazel jobs)